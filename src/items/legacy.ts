// Generated by https://quicktype.io

export interface LegacyData {
  events: Array<Array<number | string> | string>;
  types: LegacyType[];
  categories: LegacyCategory[];
}

export interface LegacyCategory {
  name: string;
  id: string;
  icon: string;
  parents: string[];
  accessories?: LegacyAccessory[];
  seasonal?: LegacySeasonal;
}

export enum LegacyAccessoryType {
  Button = 1,
}
export interface LegacyAccessory {
  type: LegacyAccessoryType;
  link: string;
  label: string;
  translation_key: string;
  color: string;
}

export interface LegacySeasonal {
  year: number;
  start: number | null;
  end: number | null;
}

export interface LegacyType {
  name: string;
  icons: string[];
  id: string;
  state: number;
  category: string;
  tags: number[];
  hidden: number[];
  meta?: LegacyMeta;
  munzee_id?: number;
  group?: Group;
}

export enum Group {
  BlackHoleItems = "Black Hole Items",
  Freshwater = "Freshwater",
  HatScatters = "Hat Scatters",
  IconicLocations = "Iconic Locations",
  LotterZEEBalls = "LotterZEE Balls",
  MapleChessPieces = "Maple Chess Pieces",
  Saltwater = "Saltwater",
  Virtuals = "Virtuals",
  WalnutChessPieces = "Walnut Chess Pieces",
}

export interface LegacyMeta {
  bouncer_duration?: number;
  bouncer_lands_on?: Array<null | string>;
  evolution_base?: string;
  scatterer_radius?: number;
  scatterer_types?: Array<number | string>;
  scatterer_min?: number;
  scatterer_max?: number;
  host_types?: Array<number | string>;
  destination_size?: number;
  destination_star_level?: number;
  destination_room_of?: number | string;
  destination_temporary?: boolean;
  scatter_duration?: number;
  evolution_stage?: number;
}
